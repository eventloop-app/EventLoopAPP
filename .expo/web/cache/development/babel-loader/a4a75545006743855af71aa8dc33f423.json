{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SignInButtons = void 0;\n\nvar _reactNative = require(\"react-native\");\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _test = _interopRequireDefault(require(\"../services/test\"));\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\APIWATSRINUKUL\\\\Desktop\\\\EventLoopAPP\\\\components\\\\SignInButtons.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar SignInButtons = function SignInButtons(props) {\n  var CallAPI = function CallAPI() {\n    console.log(\"CallAPI\");\n\n    _test.default.checkAPI().then(function (res) {\n      console.log(res.status);\n    }).catch(function (e) {\n      console.log(e);\n    });\n  };\n\n  return _react.default.createElement(_reactNative.TouchableOpacity, {\n    onPress: function onPress() {\n      return CallAPI();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, props.msg)));\n};\n\nexports.SignInButtons = SignInButtons;","map":{"version":3,"names":["SignInButtons","props","CallAPI","console","log","test","checkAPI","then","res","status","catch","e","msg"],"sources":["C:/Users/APIWATSRINUKUL/Desktop/EventLoopAPP/components/SignInButtons.js"],"sourcesContent":["import {Text, TouchableOpacity, View} from \"react-native\";\r\nimport React, {useEffect} from 'react';\r\nimport test from \"../services/test\";\r\n\r\nexport const SignInButtons = (props) =>{\r\n\r\n  const CallAPI = () => {\r\n    console.log(\"CallAPI\")\r\n    test.checkAPI().then(res => {\r\n      console.log(res.status)\r\n    }).catch(e => {\r\n      console.log(e)\r\n    })\r\n  }\r\n\r\n  return (\r\n    <TouchableOpacity onPress={()=> CallAPI()}>\r\n      <View>\r\n        <Text>{props.msg}</Text>\r\n      </View>\r\n    </TouchableOpacity>\r\n  )\r\n}\r\n\r\n\r\n"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;;;;AAEO,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAU;EAErC,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;IACpBC,OAAO,CAACC,GAAR,CAAY,SAAZ;;IACAC,aAAA,CAAKC,QAAL,GAAgBC,IAAhB,CAAqB,UAAAC,GAAG,EAAI;MAC1BL,OAAO,CAACC,GAAR,CAAYI,GAAG,CAACC,MAAhB;IACD,CAFD,EAEGC,KAFH,CAES,UAAAC,CAAC,EAAI;MACZR,OAAO,CAACC,GAAR,CAAYO,CAAZ;IACD,CAJD;EAKD,CAPD;;EASA,OACE,6BAAC,6BAAD;IAAkB,OAAO,EAAE;MAAA,OAAKT,OAAO,EAAZ;IAAA,CAA3B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE,6BAAC,iBAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE,6BAAC,iBAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAOD,KAAK,CAACW,GAAb,CADF,CADF,CADF;AAOD,CAlBM"},"metadata":{},"sourceType":"script"}