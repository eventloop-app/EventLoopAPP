{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _expoAuthSession = require(\"expo-auth-session\");\n\nvar _storages = _interopRequireDefault(require(\"./storages\"));\n\nvar _reactNativeAxios = _interopRequireDefault(require(\"react-native-axios\"));\n\nvar _qs = _interopRequireDefault(require(\"qs\"));\n\nvar Auth = (0, _createClass2.default)(function Auth() {\n  (0, _classCallCheck2.default)(this, Auth);\n\n  this.onSignIn = function () {\n    var _ref = (0, _asyncToGenerator2.default)(function* (token, codeVerifier) {\n      try {\n        var _yield$exchangeCodeAs = yield (0, _expoAuthSession.exchangeCodeAsync)({\n          code: token,\n          clientId: '4bf4a100-9aeb-42be-8649-8fd4ef42722b',\n          redirectUri: (0, _expoAuthSession.makeRedirectUri)({\n            scheme: 'exp://fy-kbp.kangpla.eventloopapp.exp.direct:80'\n          }),\n          scopes: [\"openid\", \"profile\", \"email\", \"offline_access\"],\n          grant_type: \"authorization_code\",\n          extraParams: {\n            code_verifier: codeVerifier\n          }\n        }, {\n          tokenEndpoint: 'https://login.microsoftonline.com/6f4432dc-20d2-441d-b1db-ac3380ba633d/oauth2/v2.0/token'\n        }),\n            accessToken = _yield$exchangeCodeAs.accessToken,\n            refreshToken = _yield$exchangeCodeAs.refreshToken,\n            idToken = _yield$exchangeCodeAs.idToken;\n\n        return yield new Promise(function (resolve) {\n          return resolve({\n            accessToken: accessToken,\n            refreshToken: refreshToken,\n            idToken: idToken\n          });\n        });\n      } catch (e) {\n        return yield new Promise(function (reject) {\n          return reject({\n            error: e\n          });\n        });\n      }\n    });\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  this.onRefreshToken = (0, _asyncToGenerator2.default)(function* () {\n    console.log(\"Working\");\n    var refreshToken = \"\";\n    yield _storages.default.getDataV2('user').then(function (res) {\n      refreshToken = JSON.parse(res).refreshToken;\n    });\n\n    var data = _qs.default.stringify({\n      'grant_type': 'refresh_token',\n      'client_id': '4bf4a100-9aeb-42be-8649-8fd4ef42722b',\n      'scope': 'https://graph.microsoft.com/.default',\n      'refresh_token': refreshToken\n    });\n\n    try {\n      return _reactNativeAxios.default.post('https://login.microsoftonline.com/6f4432dc-20d2-441d-b1db-ac3380ba633d/oauth2/v2.0/token', data, {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  });\n});\n\nvar _default = new Auth();\n\nexports.default = _default;","map":{"version":3,"names":["Auth","onSignIn","token","codeVerifier","exchangeCodeAsync","code","clientId","redirectUri","makeRedirectUri","scheme","scopes","grant_type","extraParams","code_verifier","tokenEndpoint","accessToken","refreshToken","idToken","Promise","resolve","e","reject","error","onRefreshToken","console","log","storages","getDataV2","then","res","JSON","parse","data","qs","stringify","axios","post"],"sources":["C:/Users/APIWATSRINUKUL/Desktop/EventLoopAPP/services/auth.js"],"sourcesContent":["import {exchangeCodeAsync, makeRedirectUri} from \"expo-auth-session\";\r\nimport storages from \"./storages\";\r\nimport axios from \"react-native-axios\";\r\nimport qs from \"qs\";\r\n\r\nclass Auth {\r\n  onSignIn = async (token, codeVerifier) => {\r\n    try {\r\n      const {accessToken, refreshToken, idToken} = await exchangeCodeAsync({\r\n        code: token,\r\n        clientId: '4bf4a100-9aeb-42be-8649-8fd4ef42722b',\r\n        redirectUri: makeRedirectUri({scheme: 'exp://fy-kbp.kangpla.eventloopapp.exp.direct:80'}),\r\n        scopes: [\"openid\", \"profile\", \"email\", \"offline_access\"],\r\n        grant_type: \"authorization_code\",\r\n        extraParams: {\r\n          code_verifier: codeVerifier\r\n        },\r\n      }, {\r\n        tokenEndpoint: 'https://login.microsoftonline.com/6f4432dc-20d2-441d-b1db-ac3380ba633d/oauth2/v2.0/token'\r\n      })\r\n      return await new Promise((resolve) => resolve({\r\n        accessToken: accessToken,\r\n        refreshToken: refreshToken,\r\n        idToken: idToken\r\n      }));\r\n    } catch (e) {\r\n      return await new Promise((reject) => reject({error: e}));\r\n    }\r\n  }\r\n\r\n  onRefreshToken = async () => {\r\n    console.log(\"Working\")\r\n    let refreshToken = \"\"\r\n    await storages.getDataV2('user').then(res => {\r\n      refreshToken = JSON.parse(res).refreshToken\r\n    })\r\n    const data = qs.stringify({\r\n      'grant_type': 'refresh_token',\r\n      'client_id': '4bf4a100-9aeb-42be-8649-8fd4ef42722b',\r\n      'scope': 'https://graph.microsoft.com/.default',\r\n      'refresh_token': refreshToken\r\n    });\r\n    try {\r\n      return axios.post('https://login.microsoftonline.com/6f4432dc-20d2-441d-b1db-ac3380ba633d/oauth2/v2.0/token', data, { 'Content-Type': 'application/x-www-form-urlencoded'})\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n}\r\n\r\nexport default new Auth();\r\n"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;IAEMA,I;;;OACJC,Q;+CAAW,WAAOC,KAAP,EAAcC,YAAd,EAA+B;MACxC,IAAI;QACF,kCAAmD,IAAAC,kCAAA,EAAkB;UACnEC,IAAI,EAAEH,KAD6D;UAEnEI,QAAQ,EAAE,sCAFyD;UAGnEC,WAAW,EAAE,IAAAC,gCAAA,EAAgB;YAACC,MAAM,EAAE;UAAT,CAAhB,CAHsD;UAInEC,MAAM,EAAE,CAAC,QAAD,EAAW,SAAX,EAAsB,OAAtB,EAA+B,gBAA/B,CAJ2D;UAKnEC,UAAU,EAAE,oBALuD;UAMnEC,WAAW,EAAE;YACXC,aAAa,EAAEV;UADJ;QANsD,CAAlB,EAShD;UACDW,aAAa,EAAE;QADd,CATgD,CAAnD;QAAA,IAAOC,WAAP,yBAAOA,WAAP;QAAA,IAAoBC,YAApB,yBAAoBA,YAApB;QAAA,IAAkCC,OAAlC,yBAAkCA,OAAlC;;QAYA,aAAa,IAAIC,OAAJ,CAAY,UAACC,OAAD;UAAA,OAAaA,OAAO,CAAC;YAC5CJ,WAAW,EAAEA,WAD+B;YAE5CC,YAAY,EAAEA,YAF8B;YAG5CC,OAAO,EAAEA;UAHmC,CAAD,CAApB;QAAA,CAAZ,CAAb;MAKD,CAlBD,CAkBE,OAAOG,CAAP,EAAU;QACV,aAAa,IAAIF,OAAJ,CAAY,UAACG,MAAD;UAAA,OAAYA,MAAM,CAAC;YAACC,KAAK,EAAEF;UAAR,CAAD,CAAlB;QAAA,CAAZ,CAAb;MACD;IACF,C;;;;;;;OAEDG,c,mCAAiB,aAAY;IAC3BC,OAAO,CAACC,GAAR,CAAY,SAAZ;IACA,IAAIT,YAAY,GAAG,EAAnB;IACA,MAAMU,iBAAA,CAASC,SAAT,CAAmB,MAAnB,EAA2BC,IAA3B,CAAgC,UAAAC,GAAG,EAAI;MAC3Cb,YAAY,GAAGc,IAAI,CAACC,KAAL,CAAWF,GAAX,EAAgBb,YAA/B;IACD,CAFK,CAAN;;IAGA,IAAMgB,IAAI,GAAGC,WAAA,CAAGC,SAAH,CAAa;MACxB,cAAc,eADU;MAExB,aAAa,sCAFW;MAGxB,SAAS,sCAHe;MAIxB,iBAAiBlB;IAJO,CAAb,CAAb;;IAMA,IAAI;MACF,OAAOmB,yBAAA,CAAMC,IAAN,CAAW,0FAAX,EAAuGJ,IAAvG,EAA6G;QAAE,gBAAgB;MAAlB,CAA7G,CAAP;IACD,CAFD,CAEE,OAAOZ,CAAP,EAAU;MACVI,OAAO,CAACC,GAAR,CAAYL,CAAZ;IACD;EACF,C;;;eAGY,IAAIpB,IAAJ,E"},"metadata":{},"sourceType":"script"}